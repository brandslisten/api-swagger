x-swagger-router-controller: mock
post:
  description: Request users's activites. Same as GET /users/{uuid}/activities but all query params can be sent as body parameters.
  produces:
    - application/json
  parameters:
    - name: uuid
      in: path
      description: uuid of the user
      required: true
      type: string
      format: uuid
    - $ref: '../../../parameters/PerPage.yaml'
    - $ref: '../../../parameters/Page.yaml'
    - $ref: '../../../parameters/OrderDir.yaml'
  requestBody:
    required: false
    content:
      application/json:
        schema:
          type: object
          properties:
            types:
              description: return the activities of the user
              type: array
              items:
                type: string
                enum:
                  - NewTopicActivity
                  - NewAnswerActivity
                  - NewSecondLevelCommentActivity
                  - NewFollowActivity
                  - RateableRatedActivity
                  - VoteGivenActivity
                  - VoteReceivedActivity
                  - SelfVoteActivity
            per_page:
              description: Items per page, can be 5 to 50 (inclusive)
              default: 10
              type: integer
              minimum: 5
              maximum: 50
            page:
              description: page of objects; 0 and below will be ignored/ handled as 1
              type: integer
              minimum: 1
            order_by:
              description: |
                The field by which sort the results. The default field is `created_at`.
                Available parameters are: `created_at` and `updated_at`
              default: created_at
              type: string
              enum:
                - created_at
                - updated_at
            order_dir:
              description: |
                Direction of the sorting. Available parameters are: `asc`, `desc` and `rand`.
                Parameter `rand' returns randomly sorted elements
              default: desc
            schema:
              type: string
              description: |
                JSON encoded field to select the exported values
                When the value of this parameter is valid, the response will only include the values defined.
                The available values for this endpoint can be taken from the example response below.
                For endpoints that returns multiple as a "list", the schema applies to each object in that list.
                Please See the 'Schema' Model below for Examples
              required: false
              type: string
  tags:
    - User
    - Activity
  responses:
    '200':
      description: Successful response
      schema:
        $ref: '../../../schemas/Activity.yaml'
