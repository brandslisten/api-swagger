get:
  description: |
    Request collection of Registered Users
  parameters:
    - name: type
      description: |
        Filter users by user type
      required: false
      in: query
      schema:
        type: array
        items:
          type: string
          enum:
            - user
            - moderator
            - employee
            - agent
            - admin
            - expert
    - name: online
      description: |
        Filter users by their online status. By default, all users are returned.
      required: false
      in: query
      schema:
        type: boolean
    - name: username_filled
      description: |
        Filter out users that have a username. By default, all users are returned.
      required: false
      in: query
      schema:
        type: boolean
    - name: about_me_filled
      description: |
        Filter out users that have a about_me. By default, all users are returned.
      required: false
      in: query
      schema:
        type: boolean
    - $ref: '../parameters/PerPage.yaml'
    - $ref: '../parameters/Page.yaml'
    - allOf:
      - $ref: '../parameters/BaseOrderBy.yaml'
      - default: created_at
        enum:
          - topics_count
          - contributions_count
          - created_at
          - updated_at
    - $ref: '../parameters/OrderDir.yaml'
    - $ref: '../parameters/Schema.yaml'
  tags:
    - User
  responses:
    '200':
      description: Successful response
      schema:
        $ref: '../schemas/UsersResponse.yaml'
post:
  description: |
    This endpoint give ability to register a new user using minimal set of
    required fields.
    Will reject the request if the word 'password' is present in request params.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/UserRequestBody.yaml'
  responses:
    '200':
      description: Successful response
      schema:
        $ref: '../schemas/User.yaml'
    '406':
      description: Not Acceptable
  tags:
    - User
